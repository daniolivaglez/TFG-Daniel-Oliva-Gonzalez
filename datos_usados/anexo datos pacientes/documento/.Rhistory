library(xlsx)
library(dplyr)
library(ggplot2)
library(tidyverse)
archivo <- "C:/Users/Daniel/Desktop/TFG-github/TFG/modelo 1/datos_usados/anexo datos pacientes/datos/datos.xlsx"
datos_pacientes <- read.xlsx(archivo,sheetIndex = 1,header = TRUE)
archivo <- "C:/Users/Daniel/Desktop/TFG-github/TFG/modelo 1/datos_usados/anexo datos pacientes/datos/datos_pacientes.xlsx"
datos_pacientes <- read.xlsx(archivo,sheetIndex = 1,header = TRUE)
names(datos_pacientes)
representar_variable <- function(variable){
if(is.numeric(variable)){
cat("La variable es de tipo numérica como podemos comprobar: ",class(variable),"\n")
c <- mean(variable, na.rm = TRUE)
cat("La media de la variable es: ",c,"\n")
d <- var(variable, na.rm = TRUE)
cat("La varianza de la variable es: ",d,"\n")
e<- sd(variable, na.rm = TRUE)
cat("La desviación estándar de la variable es: ",e,"\n")
f<- median(variable, na.rm = TRUE)
cat("La mediana de la variable es: ",f,"\n")
hist(variable, las=2, col="cyan", main="Histograma",ylab="Personas")
} else if(is.factor(variable)){
cat("La variable es de tipo factor como podemos comprobar: ",class(variable),"\n")
a1 <- levels(variable)
cat("A continuación, se obtendrán los diferentes valores existentes: ",a1,"\n")
cat("Ahora se va a ver la distribución \n")
pie(table(variable))
}
}
head(levels(datos_pacientes$symptom),20)
levels(datos_pacientes$hosp_visit_date)
datos_pacientes$logic_hosp <- ifelse(datos_pacientes$hosp_visit_date!=0,1,0)
head(datos_pacientes$logic_hosp,25)
datos_pacientes_creados <- datos_pacientes[!is.na(datos_pacientes$age),]
datos_pacientes_creados <- datos_pacientes_creados[!is.na(datos_pacientes$gender),]
datos_pacientes_creados <- datos_pacientes_creados[!is.na(datos_pacientes_creados$symptom),]
cat(c("Al principio el dataset presentaba", nrow(datos_pacientes),"filas", "\n"))
cat(c("Tras haber eliminado las filas que tenían o la edad, el género o los síntomas vacíos, el dataset presenta", nrow(datos_pacientes_creados),"filas", "\n"))
datos_pacientes_creados$logic_hosp[is.na(datos_pacientes_creados$logic_hosp)] <- 0
datos_pacientes_creados$death[is.na(datos_pacientes_creados$death)] <- 0
datos_pacientes_creados$recovered[is.na(datos_pacientes_creados$recovered)] <- 0
datos_pacientes_creados <- select(datos_pacientes_creados,id,gender,age,symptom,logic_hosp)
dir_archivo <- "C:/Users/Daniel/Desktop/TFG-github/TFG/modelo 1/datos_usados/anexo datos pacientes/datos/datos_covid19.xlsx"
write.xlsx(datos_pacientes_creados,dir_archivo)
dir_archivo <- "C:/Users/Daniel/Desktop/TFG-github/TFG/modelo 1/datos_usados/anexo datos pacientes/datos/datos_pacientes_con_sintomas.xlsx"
datos_pacientes_sintomas <- read.xlsx(dir_archivo,sheetIndex = 1,header = TRUE)
head(datos_pacientes_sintomas)
representar_variable(datos_pacientes_sintomas$age)
ggplot(datos_pacientes_sintomas, aes(x = datos_pacientes_sintomas$gender)) +
geom_bar(width = 0.4,  fill=rgb(0.1,1,0.5,0.7)) +
scale_x_discrete("Sexo") +     # configuración eje X (etiqueta del eje)
scale_y_continuous("Frecuencia") +
labs(title = "Distribución hombre y mujeres",
subtitle = "Frecuencia absoluta de la variable 'gender'")
ggplot(datos_pacientes_sintomas, aes(x = datos_pacientes_sintomas$fever)) +
geom_bar(width = 0.4,  fill=rgb(0.1,1,0.8,0.7)) +
scale_x_discrete("Fiebre") +     # configuración eje X (etiqueta del eje)
scale_y_continuous("Frecuencia") +
labs(title = "Distribución de personas con y sin fiebre",
subtitle = "Frecuencia absoluta de la variable 'fever'")
barplot(table(datos_pacientes_sintomas$fever,datos_pacientes_sintomas$gender), legend.text = c("sin fiebre", "con fiebre"), ylab="Número de personas", main = "Distribución de personas según género y el síntoma fiebre")
barplot(table(datos_pacientes_sintomas$difficult.in.breathing,datos_pacientes_sintomas$gender), legend.text = c("sin dificultad", "con dificultad"), ylab="Número de personas", main = "Distribución de personas según género y el síntoma dificultad al respirar")
tabla_dificultad <- table(datos_pacientes_sintomas$difficult.in.breathing,datos_pacientes_sintomas$gender)
numero_mujeres <- as.numeric(sum((datos_pacientes_sintomas$gender=="female")*1))
numero_hombres <- as.numeric(sum((datos_pacientes_sintomas$gender=="male")*1))
tabla_dificultad[1,1] <- tabla_dificultad[1,1]/numero_mujeres
tabla_dificultad[2,1] <- tabla_dificultad[2,1]/numero_mujeres
tabla_dificultad[1,2] <- tabla_dificultad[1,2]/numero_hombres
tabla_dificultad[2,2] <- tabla_dificultad[2,2]/numero_hombres
tabla_dificultad
tabla_neumonia <- table(datos_pacientes_sintomas$pneumonia,datos_pacientes_sintomas$gender)
tabla_neumonia[1,1] <- tabla_neumonia[1,1]/numero_mujeres
tabla_neumonia[2,1] <- tabla_neumonia[2,1]/numero_mujeres
tabla_neumonia[1,2] <- tabla_neumonia[1,2]/numero_hombres
tabla_neumonia[2,2] <- tabla_neumonia[2,2]/numero_hombres
barplot(table(datos_pacientes_sintomas$pneumonia,datos_pacientes_sintomas$gender), legend.text = c("sin neumonia", "con neumonia"), ylab="Número de personas", main = "Distribución de personas según género y el síntoma neumonía")
tabla_tos <- table(datos_pacientes_sintomas$pneumonia,datos_pacientes_sintomas$gender)
tabla_tos[1,1] <- tabla_tos[1,1]/numero_mujeres
tabla_tos[2,1] <- tabla_tos[2,1]/numero_mujeres
tabla_tos[1,2] <- tabla_tos[1,2]/numero_hombres
tabla_tos[2,2] <- tabla_tos[2,2]/numero_hombres
tabla_tos
barplot(table(datos_pacientes_sintomas$cough,datos_pacientes_sintomas$gender), legend.text = c("sin tos", "con tos"), ylab="Número de personas", main = "Distribución de personas según género y el síntoma tos")
numero_pacientes <-  numero_hombres+numero_mujeres
porcentaje_fiebre <- round(sum((datos_pacientes_sintomas$fever=="true")*1)/numero_pacientes * 100,2)
porcentaje_tos <- round(sum((datos_pacientes_sintomas$cough=="true")*1)/numero_pacientes * 100,2)
porcentaje_dificultad_resp <- round(sum((datos_pacientes_sintomas$difficult.in.breathing=="true")*1)/numero_pacientes * 100,2)
porcentaje_fatiga <- round(sum((datos_pacientes_sintomas$fatigue=="true")*1)/numero_pacientes * 100,2)
porcentaje_dolor_articular <- round(sum((datos_pacientes_sintomas$joint.pain=="true")*1)/numero_pacientes * 100,2)
porcentaje_neumonia <- round(sum((datos_pacientes_sintomas$pneumonia=="true")*1)/numero_pacientes * 100,2)
porcentaje_vomito <- round(sum((datos_pacientes_sintomas$vomiting=="true")*1)/numero_pacientes * 100,2)
porcentaje_diarrea <- round(sum((datos_pacientes_sintomas$diarrhea=="true")*1)/numero_pacientes * 100,2)
porcentaje_malestar <- round(sum((datos_pacientes_sintomas$malaise=="true")*1)/numero_pacientes * 100,2)
porcentaje_dolor_muscular <- round(sum((datos_pacientes_sintomas$muscle.pain=="true")*1)/numero_pacientes * 100,2)
porcentaje_dolor_garganta <- round(sum((datos_pacientes_sintomas$sore.throat=="true")*1)/numero_pacientes * 100,2)
porcentaje_perdida_apetito <- round(sum((datos_pacientes_sintomas$loss.of.apetit=="true")*1)/numero_pacientes * 100,2)
porcentaje_nausea <- round(sum((datos_pacientes_sintomas$nausea=="true")*1)/numero_pacientes * 100,2)
porcentaje_visita_hosp <- round(sum((datos_pacientes_sintomas$logic_hosp=="true")*1)/numero_pacientes * 100,2)
nombres <- c("Porcentaje de fiebre", "Porcentaje de tos", "Porcentaje dificultad al respirar", "Porcentaje de fatiga", "Porcentaje de dolor articular", "Porcentaje de neumonía", "Porcentaje de vómitos", "Porcentaje de diarrea", "Porcentaje de malestar", "Porcentaje de dolor muscular", "Porcentajde de dolor de garganta", "Porcentaje de pérdida de apetito", "Porcentaje de nausea", "Porcentaje visita hospital")
valores <- c(porcentaje_fiebre,porcentaje_tos,porcentaje_dificultad_resp,porcentaje_fatiga,porcentaje_dolor_articular ,porcentaje_neumonia,porcentaje_vomito,porcentaje_diarrea,porcentaje_malestar,porcentaje_dolor_muscular ,porcentaje_dolor_garganta ,porcentaje_perdida_apetito ,porcentaje_nausea, porcentaje_visita_hosp)
vector_id <- datos_pacientes_sintomas$id
data_auxiliar <- datos_pacientes[vector_id,]
datos_pacientes_sintomas$traveler<- ifelse(data_auxiliar$traveler!=0,"true","false")
datos_pacientes_sintomas$traveler[is.na(datos_pacientes_sintomas$traveler)] <- "false"
datos_pacientes_sintomas$death<- ifelse(data_auxiliar$death!=0,"true","false")
datos_pacientes_sintomas$recovered<- ifelse(data_auxiliar$recovered!=0,"true","false")
dir_archivo <- "C:/Users/Daniel/Desktop/TFG-github/TFG/modelo 1/datos_usados/anexo datos pacientes/datos/datos_pacientes_sintomas_completos.xlsx"
write.xlsx(datos_pacientes_sintomas,dir_archivo)
porcentaje_muerto <- round(sum((datos_pacientes_sintomas$death=="true")*1)/numero_pacientes * 100,2)
porcentaje_recuperados <- round(sum((datos_pacientes_sintomas$recovered=="true")*1)/numero_pacientes * 100,2)
porcentaje_viajeros <- round(sum((datos_pacientes_sintomas$traveler=="true")*1)/numero_pacientes * 100,2)
nombres2 <- c("Porcentaje muerte", "Porcentaje recuperación", "Porcentaje viajeros")
valores2 <- c(porcentaje_muerto, porcentaje_recuperados, porcentaje_viajeros)
tabla_porcentajes2 <- data.frame (cbind(nombres2,valores2))
tabla_porcentajes
tabla_porcentajes2 <- data.frame (cbind(nombres2,valores2))
tabla_porcentajes2
library(xlsx)
library(dplyr)
library(ggplot2)
library(tidyverse)
archivo <- "C:/Users/Daniel/Desktop/TFG-github/TFG/datos_usados/anexo datos pacientes/datos/datos_pacientes.xlsx"
datos_pacientes <- read.xlsx(archivo,sheetIndex = 1,header = TRUE)
nrow(datos_pacientes)
datos_pacientes$logic_hosp <- ifelse(datos_pacientes$hosp_visit_date!=0,1,0)
head(datos_pacientes$logic_hosp,25)
datos_pacientes_creados <- datos_pacientes[!is.na(datos_pacientes$age),]
datos_pacientes_creados <- datos_pacientes_creados[!is.na(datos_pacientes$gender),]
datos_pacientes_creados <- datos_pacientes_creados[!is.na(datos_pacientes_creados$symptom),]
cat(c("Al principio el dataset presentaba", nrow(datos_pacientes),"filas", "\n"))
cat(c("Tras haber eliminado las filas que tenían o la edad, el género o los síntomas vacíos, el dataset presenta", nrow(datos_pacientes_creados),"filas", "\n"))
